{
	"info": {
		"_postman_id": "46011802-1f927e62-65b2-4757-b30f-9af40d10939c",
		"name": "WitnessAI-Assessment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "TestScenarios",
			"item": [
				{
					"name": "Characters",
					"item": [
						{
							"name": "Character",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3209c6a1-f38b-49f7-a6c0-a358cb68cc99",
										"exec": [
											"var jsonData= null;\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"     jsonData = pm.response.json();\r",
											"});\r",
											"\r",
											"pm.test(\"Check summary object\", function () {\r",
											"    pm.expect(jsonData.info.count).to.eql(826);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check if the value is an integer type for pages object\", function () {\r",
											"   if('pages' in jsonData.info){\r",
											"        const pagesValueToCheck = jsonData.info.pages;\r",
											"        pm.variables.set(\"AvailablePages\", pagesValueToCheck);\r",
											"        pm.expect(Number.isInteger(pagesValueToCheck)).to.be.true;\r",
											"   }\r",
											"   else\r",
											"     pm.expect.fail(\"This test failed because an info object doesn't return pages information.\");\r",
											"    \r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check if the value is an integer type for count object\", function () {\r",
											"   if('count' in jsonData.info){\r",
											"        const countValueToCheck = jsonData.info.count;\r",
											"        pm.expect(Number.isInteger(countValueToCheck)).to.be.true;\r",
											"   }\r",
											"   else\r",
											"     pm.expect.fail(\"This test failed because an info object doesn't return pages information.\");\r",
											"    \r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check if the value is of string type for next field\", function () {\r",
											"   if('next' in jsonData.info){\r",
											"        const countValueToCheck = jsonData.info.next;\r",
											"        if(countValueToCheck!=null)\r",
											"             pm.expect(countValueToCheck).to.be.a(\"string\");\r",
											"   }\r",
											"   else\r",
											"     pm.expect.fail(\"This test failed because an info object doesn't return next page url information.\");\r",
											"    \r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Check if the value is of string type for prev field\", function () {\r",
											"   if('next' in jsonData.info){\r",
											"        const countValueToCheck = jsonData.info.prev;\r",
											"        if(countValueToCheck!=null)\r",
											"             pm.expect(countValueToCheck).to.be.a(\"string\");\r",
											"   }\r",
											"   else\r",
											"     pm.expect.fail(\"This test failed because an info object doesn't return previous page url information.\");\r",
											"    \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "46011802-9b6fb763-a6b8-4435-a7d9-ca218c0c162d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/api/character",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"api",
										"character"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pagination",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2bd58cd5-d0a7-4ce7-b3f7-f59a6e686009",
										"exec": [
											" //var currentPage=  pm.variables.get(\"RandomPageAccess\");\r",
											"  var currentPage=  pm.variables.set(\"RandomPageAccess\",\"42\");\r",
											"\r",
											"   \r",
											"   pm.test(\"Status code is 200\", function () {\r",
											"   if(pm.response.code==200){\r",
											"        var jsonData = pm.response.json();\r",
											"        var nextPageUrl = jsonData.info.next;\r",
											"        console.log(nextPageUrl);\r",
											"\r",
											"        let dataArray = nextPageUrl.split('page=');\r",
											"        console.log(\"next page number\"+dataArray[1]);\r",
											"\r",
											"   }\r",
											"   else{\r",
											"     pm.expect.fail(\"Failed to get random page data.\");\r",
											"\r",
											"   }\r",
											"   \r",
											"   \r",
											"});\r",
											"\r",
											"   \r",
											"   \r",
											"    //check pagination\r",
											"\r",
											"   // const nextPageNumber = jsonData.info.next;"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5eeac4dc-e107-45b9-9a9c-5fa5e8f15afb",
										"exec": [
											"const pages= pm.variables.get(\"AvailablePages\");\r",
											"console.log(pages);\r",
											"\r",
											"if(pages >0){\r",
											"    var randomPageNumber=  Math.floor(Math.random() * pages);\r",
											"    console.log(randomPageNumber);\r",
											"    pm.variables.set(\"RandomPageAccess\",randomPageNumber);\r",
											"    //check pagination\r",
											"\r",
											"   // const nextPageNumber = jsonData.info.next;\r",
											"\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "46011802-088837b1-e42d-490c-8ec2-42f874fad1a5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/api/character/?page={{RandomPageAccess}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"api",
										"character",
										""
									],
									"query": [
										{
											"key": "page",
											"value": "{{RandomPageAccess}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "46011802-cb61758c-00f1-4631-8362-2bc154fd43a9"
				}
			],
			"id": "46011802-477cdad7-d943-45ef-8453-83fff6ed6bc2"
		},
		{
			"name": "APIResources",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95720748-ee7e-41e4-b7f4-b891f15b0f20",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "46011802-ec63969c-55ac-49ad-ba50-7e7ebe40de24",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{Host}}/api",
					"protocol": "https",
					"host": [
						"{{Host}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		}
	]
}